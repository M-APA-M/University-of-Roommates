@model UniversityOfRoommates.Models.Casa
@*@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}*@
@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")
<link href='http://fonts.googleapis.com/css?family=Lato:300,400,700,300italic,400italic' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Raleway:400,300,700' rel='stylesheet' type='text/css'>
@{
    ViewBag.Title = "Create";
}
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <script src="http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.5.1.js" type="text/javascript"></script>
    <script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.10/jquery-ui.js" type="text/javascript"></script>
    <link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.10/themes/redmond/jquery-ui.css" rel="stylesheet" type="text/css" />
    <style type="text/css">
        .ui-autocomplete-loading {
            background: white url('images/ui-anim_basic_16x16.gif') right center no-repeat;
        }

        #searchBox {
            width: 100%;
        }
    </style>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#searchBox").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "http://dev.virtualearth.net/REST/v1/Locations",
                        dataType: "jsonp",
                        data: {
                            key: "Aj0uk1jKLE_AeTR029hI7B81ovgMuVioZK_qu7e-qBNSzXwqh_ZvBKx-y0wCsPok",
                            q: request.term
                        },
                        jsonp: "jsonp",
                        success: function (data) {
                            var result = data.resourceSets[0];
                            if (result) {
                                if (result.estimatedTotal > 0) {
                                    response($.map(result.resources, function (item) {
                                        return {
                                            data: item,
                                            label: item.name + ' (' + item.address.countryRegion + ')',
                                            value: item.name
                                        }
                                    }));
                                }
                            }
                        }
                    });
                },
                minLength: 1,
                change: function (event, ui) {
                    if (!ui.item)
                        $("#searchBox").val('');
                },
                select: function (event, ui) {
                    displaySelectedItem(ui.item.data);
                }
            });
        });

        function displaySelectedItem(item) {
            $("#searchResult").empty().append(' (Latitude: ' + item.point.coordinates[0] + ' Longitude: ' + item.point.coordinates[1] + ')');

            document.getElementById("latitudine").value = item.point.coordinates[0].toString().replace(".", ",");
            document.getElementById("longitudine").value = item.point.coordinates[1].toString().replace(".", ",");
            document.getElementById("indirizzo").value = item.address.addressLine.split(",")[0];
            document.getElementById("civico").value = item.address.addressLine.split(",")[1];
            document.getElementById("provincia").value = item.address.adminDistrict2;
            document.getElementById("city").value = item.address.locality;
            document.getElementById("cap").value = item.address.postalCode;
        }
    </script>
</head>
<body>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="body">
            <div class="login-wrap">

                <div class="login-html">
                    <div class="form-horizontal">
                        <div align="center">
                            <h2 style="color:azure">Inserisci i dati della casa</h2>
                            <h3>@Html.ActionLink("Torna alla lista ", "Index")</h3>
                        </div>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label class="UtenteFont">Nome casa  </label>
                            <div class="group">
                                @Html.EditorFor(model => model.nomeCasa, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.nomeCasa, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="group">
                                <div>

                                    <div class="ui-widget">
                                        <label for="searchBox" style="color:azure", class="UtenteFont">
                                            Cerca e seleziona l'indirizzo della casa
                                        </label>
                                        <input id="searchBox" />
                                    </div>
                                    <div id="searchResult" class="ui-widget" style="margin-top: 1em; color:chartreuse">
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div class="form-group">
                                @Html.LabelFor(model => model.longitudine, htmlAttributes: new { @class = "UtenteFont" })
                                <div class="group">
                                    @Html.EditorFor(model => model.longitudine, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.longitudine, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.latitudine, htmlAttributes: new { @class = "UtenteFont" })
                                <div class="group">
                                    @Html.EditorFor(model => model.latitudine, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.latitudine, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
            @Html.LabelFor(model => model.provincia, htmlAttributes: new { @class = "UtenteFont" })
            <div class="group">
                @Html.EditorFor(model => model.provincia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        @*<div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "UtenteFont" })
            <div class="group">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        @*<div class="form-group">
            @Html.LabelFor(model => model.indirizzo, htmlAttributes: new { @class = "UtenteFont" })
            <div class="cgroup0">
                @Html.EditorFor(model => model.indirizzo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.indirizzo, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        @*<div class="form-group">
            @Html.LabelFor(model => model.civico, htmlAttributes: new { @class = "UtenteFont" })
            <div class="group">
                @Html.EditorFor(model => model.civico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.civico, "", new { @class = "text-danger" })
            </div>
        </div>*@

                        @*<div class="form-group">
            @Html.LabelFor(model => model.cap, htmlAttributes: new { @class = "UtenteFont" })
            <div class="group">
                @Html.EditorFor(model => model.cap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cap, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            @Html.HiddenFor(model => model.latitudine )
                            @Html.HiddenFor(model => model.longitudine)
                            @Html.HiddenFor(model => model.indirizzo)
                            @Html.HiddenFor(model => model.civico)
                            @Html.HiddenFor(model => model.provincia)
                            @Html.HiddenFor(model => model.city)
                            @Html.HiddenFor(model => model.cap)
                        </div>
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.UserName, "UserName", htmlAttributes: new { @class = "UtenteFont" })
                            <div class="group">
                                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.HiddenFor(model => model.UserName, new { @Value = ViewBag.UserName})
                        </div>

                     

                        <div class="form-group">
                            <label class="UtenteFont">Numero di servizi  </label>
                            <div class="group">
                                @Html.EditorFor(model => model.numeroServizi, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.numeroServizi, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="UtenteFont">Metratura interna </label>
                            <div class="group">
                                @Html.EditorFor(model => model.metraturaInterna, new { htmlAttributes = new { @class = "form-control" , @type="number"} })
                                @Html.ValidationMessageFor(model => model.metraturaInterna, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="UtenteFont">Metratura esterna  </label>
                            <div class="group">
                                @Html.EditorFor(model => model.metraturaEsterna, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                @Html.ValidationMessageFor(model => model.metraturaEsterna, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="UtenteFont">Posto auto   :   </label>
                            @Html.EditorFor(model => model.postoAuto)
                            <div class="group">
                                <div class="checkbox">
                                     
                                  
                                    @Html.ValidationMessageFor(model => model.postoAuto, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="UtenteFont">Descrizione servizi  </label>
                            <div class="group">
                                @Html.EditorFor(model => model.descrizioneServizi, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.descrizioneServizi, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div align="center">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
       
    </div>


</body>

</html>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
}
