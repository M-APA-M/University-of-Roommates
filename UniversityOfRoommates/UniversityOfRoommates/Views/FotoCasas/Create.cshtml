@model UniversityOfRoommates.Models.FotoCasa

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>FotoCasa</h4>
        <hr />

        @Html.HiddenFor(model => model.nomeCasa , new { @Value = ViewBag.nomeCasa})
        @Html.HiddenFor(model => model.longitude, new { @Value = ViewBag.lon })
        @Html.HiddenFor(model => model.latitude, new { @Value = ViewBag.lat })
        @Html.HiddenFor(model => model.idFoto, new { @Value = ViewBag.id })

        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nomeCasa, "nomeCasa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("nomeCasa", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nomeCasa, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.longitude, "longitude", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("longitude", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.latitude, "latitude", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("latitude", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-grou   p">
            @Html.LabelFor(model => model.idFoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idFoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idFoto, "", new { @class = "text-danger" })
            </div>
        </div>*@
        @*<input type="file" id="image" onchange="imagePath()"/>
        @Html.HiddenFor(m => m.linkFoto, new { id="setPath"})*@
        @Html.TextBoxFor(m=>m.linkFoto, new { @class = "form-control" })

        @*<div class="form-group">
            @Html.LabelFor(model => model.linkFoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.linkFoto, new { htmlAttributes = new { @type = "file" } })
                @Html.ValidationMessageFor(model => model.linkFoto, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<script>
    var imagePath = function () {
        var a = document.getElementById("image");
        document.getElementById("setPath").value = a.files;
    }
</script>
@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
